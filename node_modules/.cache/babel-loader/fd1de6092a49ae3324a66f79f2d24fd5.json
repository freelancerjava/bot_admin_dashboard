{"ast":null,"code":"(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { combineReducers } from 'redux'; // import { routerReducer } from 'react-router-redux';\n\nimport { connectRouter } from 'connected-react-router';\nimport history from './history';\nimport homeReducer from '../features/home/redux/reducer';\nimport commonReducer from '../features/common/redux/reducer';\nimport examplesReducer from '../features/examples/redux/reducer';\nimport logsReducer from '../features/logs/redux/reducer';\nimport orerReducer from '../features/orer/redux/reducer';\nimport headersReducer from '../features/headers/redux/reducer';\nimport navbarsReducer from '../features/navbars/redux/reducer';\nimport sidebarsReducer from '../features/sidebars/redux/reducer';\nimport footersReducer from '../features/footers/redux/reducer';\nimport authReducer from '../features/auth/redux/reducer';\nimport reportReducer from '../features/report/redux/reducer';\nimport operationsReducer from '../features/operations/redux/reducer';\nimport mapReducer from '../features/map/redux/reducer'; // NOTE 1: DO NOT CHANGE the 'reducerMap' name and the declaration pattern.\n// This is used for Rekit cmds to register new features, remove features, etc.\n// NOTE 2: always use the camel case of the feature folder name as the store branch name\n// So that it's easy for others to understand it and Rekit could manage them.\n\nvar reducerMap = {\n  router: connectRouter(history),\n  home: homeReducer,\n  common: commonReducer,\n  examples: examplesReducer,\n  logs: logsReducer,\n  orer: orerReducer,\n  headers: headersReducer,\n  navbars: navbarsReducer,\n  sidebars: sidebarsReducer,\n  footers: footersReducer,\n  auth: authReducer,\n  report: reportReducer,\n  operations: operationsReducer,\n  map: mapReducer\n};\n\nvar _default = combineReducers(reducerMap);\n\nexport default _default;\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(reducerMap, \"reducerMap\", \"/home/ubuntu/projects/dashboard-template/src/common/rootReducer.js\");\n  reactHotLoader.register(_default, \"default\", \"/home/ubuntu/projects/dashboard-template/src/common/rootReducer.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/ubuntu/projects/dashboard-template/src/common/rootReducer.js"],"names":["combineReducers","connectRouter","history","homeReducer","commonReducer","examplesReducer","logsReducer","orerReducer","headersReducer","navbarsReducer","sidebarsReducer","footersReducer","authReducer","reportReducer","operationsReducer","mapReducer","reducerMap","router","home","common","examples","logs","orer","headers","navbars","sidebars","footers","auth","report","operations","map"],"mappings":";;;;;;;;;AAAA,SAASA,eAAT,QAAgC,OAAhC,C,CACA;;AACA,SAASC,aAAT,QAA8B,wBAA9B;AACA,OAAOC,OAAP,MAAoB,WAApB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,OAAOC,eAAP,MAA4B,oCAA5B;AACA,OAAOC,cAAP,MAA2B,mCAA3B;AACA,OAAOC,WAAP,MAAwB,gCAAxB;AACA,OAAOC,aAAP,MAA0B,kCAA1B;AACA,OAAOC,iBAAP,MAA8B,sCAA9B;AACA,OAAOC,UAAP,MAAuB,+BAAvB,C,CAEA;AACA;AACA;AACA;;AAEA,IAAMC,UAAU,GAAG;AACjBC,EAAAA,MAAM,EAAEhB,aAAa,CAACC,OAAD,CADJ;AAEjBgB,EAAAA,IAAI,EAAEf,WAFW;AAGjBgB,EAAAA,MAAM,EAAEf,aAHS;AAIjBgB,EAAAA,QAAQ,EAAEf,eAJO;AAKjBgB,EAAAA,IAAI,EAAEf,WALW;AAMjBgB,EAAAA,IAAI,EAAEf,WANW;AAOjBgB,EAAAA,OAAO,EAAEf,cAPQ;AAQjBgB,EAAAA,OAAO,EAAEf,cARQ;AASjBgB,EAAAA,QAAQ,EAAEf,eATO;AAUjBgB,EAAAA,OAAO,EAAEf,cAVQ;AAWjBgB,EAAAA,IAAI,EAAEf,WAXW;AAYjBgB,EAAAA,MAAM,EAAEf,aAZS;AAajBgB,EAAAA,UAAU,EAAEf,iBAbK;AAcjBgB,EAAAA,GAAG,EAAEf;AAdY,CAAnB;;eAiBef,eAAe,CAACgB,UAAD,C;;AAA9B;;;;;;;;;;0BAjBMA,U","sourcesContent":["import { combineReducers } from 'redux';\n// import { routerReducer } from 'react-router-redux';\nimport { connectRouter } from 'connected-react-router'\nimport history from './history';\nimport homeReducer from '../features/home/redux/reducer';\nimport commonReducer from '../features/common/redux/reducer';\nimport examplesReducer from '../features/examples/redux/reducer';\nimport logsReducer from '../features/logs/redux/reducer';\nimport orerReducer from '../features/orer/redux/reducer';\nimport headersReducer from '../features/headers/redux/reducer';\nimport navbarsReducer from '../features/navbars/redux/reducer';\nimport sidebarsReducer from '../features/sidebars/redux/reducer';\nimport footersReducer from '../features/footers/redux/reducer';\nimport authReducer from '../features/auth/redux/reducer';\nimport reportReducer from '../features/report/redux/reducer';\nimport operationsReducer from '../features/operations/redux/reducer';\nimport mapReducer from '../features/map/redux/reducer';\n\n// NOTE 1: DO NOT CHANGE the 'reducerMap' name and the declaration pattern.\n// This is used for Rekit cmds to register new features, remove features, etc.\n// NOTE 2: always use the camel case of the feature folder name as the store branch name\n// So that it's easy for others to understand it and Rekit could manage them.\n\nconst reducerMap = {\n  router: connectRouter(history),\n  home: homeReducer,\n  common: commonReducer,\n  examples: examplesReducer,\n  logs: logsReducer,\n  orer: orerReducer,\n  headers: headersReducer,\n  navbars: navbarsReducer,\n  sidebars: sidebarsReducer,\n  footers: footersReducer,\n  auth: authReducer,\n  report: reportReducer,\n  operations: operationsReducer,\n  map: mapReducer,\n};\n\nexport default combineReducers(reducerMap);\n"]},"metadata":{},"sourceType":"module"}