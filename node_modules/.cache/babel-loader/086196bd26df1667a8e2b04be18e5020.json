{"ast":null,"code":"import _regeneratorRuntime from \"/home/ubuntu/projects/dashboard-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"/home/ubuntu/projects/dashboard-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport { strapi } from \"../../../axios\";\nexport var loginAction = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(dataObj) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return strapi.login(dataObj.email, dataObj.password);\n\n          case 2:\n            data = _context.sent;\n            // const time = new Date(data.created).getTime() + data.ttl * 1000;\n            // localStorage.setItem('token', data.id);\n            // localStorage.setItem('expiresOn', time)\n            localStorage.setItem('user', JSON.stringify(data.user));\n            return _context.abrupt(\"return\", data);\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function loginAction(_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\nexport var uploadFile = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(formdata) {\n    var form, files;\n    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            form = new FormData();\n            form.append('files', formdata.fileInputElement.files[0], 'file-name.ext'); // form.append('files', fileInputElement.files[1], 'file-2-name.ext');\n\n            _context2.next = 4;\n            return strapi.upload(form);\n\n          case 4:\n            files = _context2.sent;\n            return _context2.abrupt(\"return\", files);\n\n          case 6:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, _callee2);\n  }));\n\n  return function uploadFile(_x2) {\n    return _ref2.apply(this, arguments);\n  };\n}();\nexport var getRepcats = /*#__PURE__*/function () {\n  var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3() {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n      while (1) {\n        switch (_context3.prev = _context3.next) {\n          case 0:\n            _context3.next = 2;\n            return strapi.getEntries('repcats');\n\n          case 2:\n            data = _context3.sent;\n            return _context3.abrupt(\"return\", data);\n\n          case 4:\n          case \"end\":\n            return _context3.stop();\n        }\n      }\n    }, _callee3);\n  }));\n\n  return function getRepcats() {\n    return _ref3.apply(this, arguments);\n  };\n}();\nexport var createReport = /*#__PURE__*/function () {\n  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(formData) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n      while (1) {\n        switch (_context4.prev = _context4.next) {\n          case 0:\n            _context4.next = 2;\n            return strapi.createEntry('reports', formData);\n\n          case 2:\n            data = _context4.sent;\n            return _context4.abrupt(\"return\", data);\n\n          case 4:\n          case \"end\":\n            return _context4.stop();\n        }\n      }\n    }, _callee4);\n  }));\n\n  return function createReport(_x3) {\n    return _ref4.apply(this, arguments);\n  };\n}();\nexport var updateReport = /*#__PURE__*/function () {\n  var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(formData) {\n    var data;\n    return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n      while (1) {\n        switch (_context5.prev = _context5.next) {\n          case 0:\n            _context5.next = 2;\n            return strapi.updateEntry('reports', formData.id, formData);\n\n          case 2:\n            data = _context5.sent;\n            return _context5.abrupt(\"return\", data);\n\n          case 4:\n          case \"end\":\n            return _context5.stop();\n        }\n      }\n    }, _callee5);\n  }));\n\n  return function updateReport(_x4) {\n    return _ref5.apply(this, arguments);\n  };\n}();\nexport var getReportsByGq = /*#__PURE__*/function () {\n  var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(key, _ref6) {\n    var date, data;\n    return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n      while (1) {\n        switch (_context6.prev = _context6.next) {\n          case 0:\n            date = _ref6.date;\n            _context6.next = 3;\n            return strapi.request(\"POST\", \"/graphql\", {\n              data: {\n                query: \"\\n            query {\\n                reports(where: { date: \\\"\".concat(date, \"\\\" }, sort:\\\"id:asc\\\") {\\n                  id\\n                  dej\\n                  dej_pom\\n                  royxat_boyicha\\n                  safda\\n                  safar\\n                  tatil\\n                  gospital\\n                  uy_karantin\\n                  command {\\n                    name\\n                  }\\n                  repcat {\\n                    id\\n                    name\\n                  }\\n                  file {\\n                    url\\n                  }\\n                }\\n              }\\n              \\n            \")\n              }\n            });\n\n          case 3:\n            data = _context6.sent;\n            return _context6.abrupt(\"return\", data.data);\n\n          case 5:\n          case \"end\":\n            return _context6.stop();\n        }\n      }\n    }, _callee6);\n  }));\n\n  return function getReportsByGq(_x5, _x6) {\n    return _ref7.apply(this, arguments);\n  };\n}();\nexport var getReportByGq = /*#__PURE__*/function () {\n  var _ref9 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee7(key, _ref8) {\n    var date, id, data;\n    return _regeneratorRuntime.wrap(function _callee7$(_context7) {\n      while (1) {\n        switch (_context7.prev = _context7.next) {\n          case 0:\n            date = _ref8.date, id = _ref8.id;\n            _context7.next = 3;\n            return strapi.request(\"POST\", \"/graphql\", {\n              data: {\n                query: \"\\n            query {\\n                reports(where: { date: \\\"\".concat(date, \"\\\", command:{ id: \").concat(id, \" } }, sort:\\\"id:desc\\\") {\\n                  id\\n                  dej\\n                  dej_pom\\n                  royxat_boyicha\\n                  safda\\n                  safar\\n                  tatil\\n                  gospital\\n                  uy_karantin\\n                  command {\\n                    name\\n                  }\\n                  repcat {\\n                    id\\n                    name\\n                  }\\n                  file {\\n                    url\\n                  }\\n                }\\n              }         \\n            \")\n              }\n            });\n\n          case 3:\n            data = _context7.sent;\n            return _context7.abrupt(\"return\", data.data);\n\n          case 5:\n          case \"end\":\n            return _context7.stop();\n        }\n      }\n    }, _callee7);\n  }));\n\n  return function getReportByGq(_x7, _x8) {\n    return _ref9.apply(this, arguments);\n  };\n}();\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(loginAction, \"loginAction\", \"/home/ubuntu/projects/dashboard-template/src/features/dashboard/query/index.js\");\n  reactHotLoader.register(uploadFile, \"uploadFile\", \"/home/ubuntu/projects/dashboard-template/src/features/dashboard/query/index.js\");\n  reactHotLoader.register(getRepcats, \"getRepcats\", \"/home/ubuntu/projects/dashboard-template/src/features/dashboard/query/index.js\");\n  reactHotLoader.register(createReport, \"createReport\", \"/home/ubuntu/projects/dashboard-template/src/features/dashboard/query/index.js\");\n  reactHotLoader.register(updateReport, \"updateReport\", \"/home/ubuntu/projects/dashboard-template/src/features/dashboard/query/index.js\");\n  reactHotLoader.register(getReportsByGq, \"getReportsByGq\", \"/home/ubuntu/projects/dashboard-template/src/features/dashboard/query/index.js\");\n  reactHotLoader.register(getReportByGq, \"getReportByGq\", \"/home/ubuntu/projects/dashboard-template/src/features/dashboard/query/index.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/ubuntu/projects/dashboard-template/src/features/dashboard/query/index.js"],"names":["strapi","loginAction","dataObj","login","email","password","data","localStorage","setItem","JSON","stringify","user","uploadFile","formdata","form","FormData","append","fileInputElement","files","upload","getRepcats","getEntries","createReport","formData","createEntry","updateReport","updateEntry","id","getReportsByGq","key","date","request","query","getReportByGq"],"mappings":"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","sourcesContent":["import { strapi } from \"../../../axios\";\r\n\r\n\r\nexport const loginAction = async (dataObj) => {\r\n    const data = await strapi.login(dataObj.email, dataObj.password);\r\n\r\n    // const time = new Date(data.created).getTime() + data.ttl * 1000;\r\n    // localStorage.setItem('token', data.id);\r\n    // localStorage.setItem('expiresOn', time)\r\n    localStorage.setItem('user', JSON.stringify(data.user));\r\n    return data;\r\n}\r\n\r\nexport const uploadFile = async (formdata) => {\r\n    const form = new FormData();\r\n    form.append('files', formdata.fileInputElement.files[0], 'file-name.ext');\r\n    // form.append('files', fileInputElement.files[1], 'file-2-name.ext');\r\n    const files = await strapi.upload(form);\r\n    return files;\r\n}\r\n\r\nexport const getRepcats = async () => {\r\n    const data = await strapi.getEntries('repcats');\r\n    // console.log(data);\r\n    return data;\r\n}\r\n\r\nexport const createReport = async (formData) => {\r\n    const data = await strapi.createEntry('reports', formData)\r\n    return data;\r\n}\r\n\r\nexport const updateReport = async (formData) => {\r\n    const data = await strapi.updateEntry('reports', formData.id, formData)\r\n    return data;\r\n}\r\n\r\nexport const getReportsByGq = async (key, { date }) => {\r\n    const data = await strapi.request(\"POST\", \"/graphql\", {\r\n        data: {\r\n            query: `\r\n            query {\r\n                reports(where: { date: \"${date}\" }, sort:\"id:asc\") {\r\n                  id\r\n                  dej\r\n                  dej_pom\r\n                  royxat_boyicha\r\n                  safda\r\n                  safar\r\n                  tatil\r\n                  gospital\r\n                  uy_karantin\r\n                  command {\r\n                    name\r\n                  }\r\n                  repcat {\r\n                    id\r\n                    name\r\n                  }\r\n                  file {\r\n                    url\r\n                  }\r\n                }\r\n              }\r\n              \r\n            `}\r\n    })\r\n\r\n    // const data = await strapi.getEntries('reports');\r\n\r\n    // console.log(\"data\", data.data.reports)\r\n    return data.data;\r\n}\r\n\r\nexport const getReportByGq = async (key, { date, id }) => {\r\n    const data = await strapi.request(\"POST\", \"/graphql\", {\r\n        data: {\r\n            query: `\r\n            query {\r\n                reports(where: { date: \"${date}\", command:{ id: ${id} } }, sort:\"id:desc\") {\r\n                  id\r\n                  dej\r\n                  dej_pom\r\n                  royxat_boyicha\r\n                  safda\r\n                  safar\r\n                  tatil\r\n                  gospital\r\n                  uy_karantin\r\n                  command {\r\n                    name\r\n                  }\r\n                  repcat {\r\n                    id\r\n                    name\r\n                  }\r\n                  file {\r\n                    url\r\n                  }\r\n                }\r\n              }         \r\n            `}\r\n    })\r\n\r\n    // const data = await strapi.getEntries('reports');\r\n\r\n    // console.log(\"data\", data.data.reports)\r\n    return data.data;\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}