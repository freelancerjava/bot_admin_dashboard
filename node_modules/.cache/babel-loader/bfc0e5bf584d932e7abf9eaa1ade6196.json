{"ast":null,"code":"import _slicedToArray from \"/home/farrux/java/bot_admin_dashboard/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/farrux/java/bot_admin_dashboard/src/features/messages/Complaint.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport Col from \"reactstrap/lib/Col\";\nimport Container from \"reactstrap/lib/Container\";\nimport Row from \"reactstrap/lib/Row\";\nimport { getMessagesTypeByGq } from \"./query\";\nexport default function Complaint() {\n  var orders_data = useQuery([\"orders\", {\n    type: 'complaint'\n  }], getMessagesTypeByGq);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      orders = _useState2[0],\n      setorders = _useState2[1];\n\n  useEffect(function () {\n    var cancel = true;\n\n    if (cancel) {\n      if (orders_data.data && orders_data.data.orders) {\n        setorders(orders_data.data.orders);\n      } else {\n        setorders([]);\n      }\n\n      cancel = false;\n    }\n  }, [orders_data.data]);\n  return /*#__PURE__*/React.createElement(Container, {\n    fluid: true,\n    className: \"mt--7\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(SimpleListTab, {\n    query_key: 'complaint_orders',\n    query_fn: getMessagesTypeByGq,\n    filter: {\n      type: 'complaint'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 11\n    }\n  }))));\n}\n\n__signature__(Complaint, \"useQuery{orders_data}\\nuseState{[orders, setorders]([])}\\nuseEffect{}\", function () {\n  return [useQuery];\n});\n\n;\nComplaint.propTypes = {};\nComplaint.defaultProps = {};\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Complaint, \"Complaint\", \"/home/farrux/java/bot_admin_dashboard/src/features/messages/Complaint.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/farrux/java/bot_admin_dashboard/src/features/messages/Complaint.js"],"names":["React","useEffect","useState","useQuery","Col","Container","Row","getMessagesTypeByGq","Complaint","orders_data","type","orders","setorders","cancel","data","propTypes","defaultProps"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAOC,GAAP,MAAgB,oBAAhB;AACA,SAASC,mBAAT,QAAoC,SAApC;AAEA,eAAe,SAASC,SAAT,GAAqB;AAClC,MAAMC,WAAW,GAAGN,QAAQ,CAAC,CAAC,QAAD,EAAW;AAACO,IAAAA,IAAI,EAAC;AAAN,GAAX,CAAD,EAAiCH,mBAAjC,CAA5B;;AADkC,kBAGNL,QAAQ,CAAC,EAAD,CAHF;AAAA;AAAA,MAG3BS,MAH2B;AAAA,MAGnBC,SAHmB;;AAIlCX,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIY,MAAM,GAAG,IAAb;;AACA,QAAIA,MAAJ,EAAY;AACV,UAAIJ,WAAW,CAACK,IAAZ,IAAoBL,WAAW,CAACK,IAAZ,CAAiBH,MAAzC,EAAiD;AAC/CC,QAAAA,SAAS,CAACH,WAAW,CAACK,IAAZ,CAAiBH,MAAlB,CAAT;AACD,OAFD,MAEO;AACLC,QAAAA,SAAS,CAAC,EAAD,CAAT;AACD;;AACDC,MAAAA,MAAM,GAAG,KAAT;AACD;AACF,GAVQ,EAUN,CAACJ,WAAW,CAACK,IAAb,CAVM,CAAT;AAWA,sBACE,oBAAC,SAAD;AAAW,IAAA,KAAK,MAAhB;AAAiB,IAAA,SAAS,EAAC,OAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,aAAD;AACA,IAAA,SAAS,EAAE,kBADX;AAEA,IAAA,QAAQ,EAAEP,mBAFV;AAGA,IAAA,MAAM,EAAE;AAAEG,MAAAA,IAAI,EAAE;AAAR,KAHR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,CADF;AAaD;;cA5BuBF,S;UACFL,Q;;;AA2BrB;AAEDK,SAAS,CAACO,SAAV,GAAsB,EAAtB;AACAP,SAAS,CAACQ,YAAV,GAAyB,EAAzB;;;;;;;;;;0BA/BwBR,S","sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport { useQuery } from \"react-query\";\nimport Col from \"reactstrap/lib/Col\";\nimport Container from \"reactstrap/lib/Container\";\nimport Row from \"reactstrap/lib/Row\";\nimport { getMessagesTypeByGq } from \"./query\";\n\nexport default function Complaint() {\n  const orders_data = useQuery([\"orders\", {type:'complaint'}], getMessagesTypeByGq);\n\n  const [orders, setorders] = useState([]);\n  useEffect(() => {\n    let cancel = true;\n    if (cancel) {\n      if (orders_data.data && orders_data.data.orders) {\n        setorders(orders_data.data.orders);\n      } else {\n        setorders([])\n      }\n      cancel = false;\n    }\n  }, [orders_data.data]);\n  return (\n    <Container fluid className=\"mt--7\">\n      <Row>\n        <Col>\n          <SimpleListTab\n          query_key={'complaint_orders'}\n          query_fn={getMessagesTypeByGq}\n          filter={{ type: 'complaint' }}\n          />\n        </Col>\n      </Row>\n    </Container>\n  );\n};\n\nComplaint.propTypes = {};\nComplaint.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}