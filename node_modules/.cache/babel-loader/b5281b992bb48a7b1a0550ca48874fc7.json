{"ast":null,"code":"import _slicedToArray from \"/home/ubuntu/projects/dashboard-template/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"/home/ubuntu/projects/dashboard-template/src/features/orer/Dashboard.js\";\n\n(function () {\n  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;\n  enterModule && enterModule(module);\n})();\n\nvar __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {\n  return a;\n};\n\nimport React, { useEffect, useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { Card, CardBody, CardFooter, CardHeader, Col, Container, Row } from 'reactstrap';\nimport moment from 'moment';\nimport MapBrowser from '../map/MapBrowser';\nimport ReportsList from '../report/ReportList';\nimport { getAllLogsByGq } from './query'; // import PropTypes from 'prop-types';\n\nexport default function Dashboard() {\n  var ltu = localStorage.getItem('user');\n\n  var _useState = useState(JSON.parse(ltu) || {}),\n      _useState2 = _slicedToArray(_useState, 2),\n      user = _useState2[0],\n      setuser = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      logs = _useState4[0],\n      setlogs = _useState4[1];\n\n  var logdata = useQuery([\"logs\", {\n    date: moment().format(\"YYYY-MM-DD\"),\n    id: user.command.id\n  }], getAllLogsByGq);\n  console.log(logdata);\n  useEffect(function () {\n    if (logdata.data && logdata.data.logs != null) {\n      setlogs(logdata.data.logs);\n    } else {\n      setlogs([]);\n    }\n  }, [logdata.data]);\n  return /*#__PURE__*/React.createElement(Container, {\n    className: \"mt--7 row-transition\",\n    fluid: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ReportsList, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 11\n    }\n  }))), /*#__PURE__*/React.createElement(\"hr\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(Row, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Col, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Card, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(CardHeader, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 15\n    }\n  }, \"\\u041F\\u0440\\u043E\\u0432\\u043E\\u0434\\u0438\\u043C\\u044B\\u0435 \\u043C\\u0435\\u0440\\u043E\\u043F\\u0440\\u0438\\u044F\\u0442\\u0438\\u044F\")), /*#__PURE__*/React.createElement(CardBody, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(MapBrowser, {\n    data: logs,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 15\n    }\n  }))))));\n}\n\n__signature__(Dashboard, \"useState{[user, setuser](JSON.parse(ltu) || {})}\\nuseState{[logs, setlogs]([])}\\nuseQuery{logdata}\\nuseEffect{}\", function () {\n  return [useQuery];\n});\n\n;\nDashboard.propTypes = {};\nDashboard.defaultProps = {};\n;\n\n(function () {\n  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;\n\n  if (!reactHotLoader) {\n    return;\n  }\n\n  reactHotLoader.register(Dashboard, \"Dashboard\", \"/home/ubuntu/projects/dashboard-template/src/features/orer/Dashboard.js\");\n})();\n\n;\n\n(function () {\n  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;\n  leaveModule && leaveModule(module);\n})();","map":{"version":3,"sources":["/home/ubuntu/projects/dashboard-template/src/features/orer/Dashboard.js"],"names":["React","useEffect","useState","useQuery","Card","CardBody","CardFooter","CardHeader","Col","Container","Row","moment","MapBrowser","ReportsList","getAllLogsByGq","Dashboard","ltu","localStorage","getItem","JSON","parse","user","setuser","logs","setlogs","logdata","date","format","id","command","console","log","data","propTypes","defaultProps"],"mappings":";;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,IAAT,EAAeC,QAAf,EAAyBC,UAAzB,EAAqCC,UAArC,EAAiDC,GAAjD,EAAsDC,SAAtD,EAAiEC,GAAjE,QAA4E,YAA5E;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,UAAP,MAAuB,mBAAvB;AACA,OAAOC,WAAP,MAAwB,sBAAxB;AACA,SAASC,cAAT,QAA+B,SAA/B,C,CACA;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAClC,MAAMC,GAAG,GAAGC,YAAY,CAACC,OAAb,CAAqB,MAArB,CAAZ;;AADkC,kBAEVhB,QAAQ,CAACiB,IAAI,CAACC,KAAL,CAAWJ,GAAX,KAAmB,EAApB,CAFE;AAAA;AAAA,MAE3BK,IAF2B;AAAA,MAErBC,OAFqB;;AAAA,mBAGVpB,QAAQ,CAAC,EAAD,CAHE;AAAA;AAAA,MAG3BqB,IAH2B;AAAA,MAGrBC,OAHqB;;AAKlC,MAAMC,OAAO,GAAGtB,QAAQ,CAAC,CAAC,MAAD,EAAS;AAAEuB,IAAAA,IAAI,EAAEf,MAAM,GAAGgB,MAAT,CAAgB,YAAhB,CAAR;AAAuCC,IAAAA,EAAE,EAAEP,IAAI,CAACQ,OAAL,CAAaD;AAAxD,GAAT,CAAD,EAAyEd,cAAzE,CAAxB;AACAgB,EAAAA,OAAO,CAACC,GAAR,CAAYN,OAAZ;AAEAxB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIwB,OAAO,CAACO,IAAR,IAAgBP,OAAO,CAACO,IAAR,CAAaT,IAAb,IAAqB,IAAzC,EAA+C;AAC7CC,MAAAA,OAAO,CAACC,OAAO,CAACO,IAAR,CAAaT,IAAd,CAAP;AACD,KAFD,MAEO;AACLC,MAAAA,OAAO,CAAC,EAAD,CAAP;AACD;AACF,GANQ,EAMN,CAACC,OAAO,CAACO,IAAT,CANM,CAAT;AAOA,sBACE,oBAAC,SAAD;AAAW,IAAA,SAAS,EAAC,sBAArB;AAA4C,IAAA,KAAK,MAAjD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,eAOE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uIADF,CADF,eAIE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,UAAD;AAAY,IAAA,IAAI,EAAET,IAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CAJF,CADF,CADF,CAPF,CADF;AAuBD;;cAtCuBR,S;UAKNZ,Q;;;AAiCjB;AAEDY,SAAS,CAACkB,SAAV,GAAsB,EAAtB;AACAlB,SAAS,CAACmB,YAAV,GAAyB,EAAzB;;;;;;;;;;0BAzCwBnB,S","sourcesContent":["import React, { useEffect, useState } from 'react';\nimport { useQuery } from 'react-query';\nimport { Card, CardBody, CardFooter, CardHeader, Col, Container, Row } from 'reactstrap';\nimport moment from 'moment';\nimport MapBrowser from '../map/MapBrowser';\nimport ReportsList from '../report/ReportList';\nimport { getAllLogsByGq } from './query';\n// import PropTypes from 'prop-types';\n\nexport default function Dashboard() {\n  const ltu = localStorage.getItem('user');\n  const [user, setuser] = useState(JSON.parse(ltu) || {})\n  const [logs, setlogs] = useState([])\n\n  const logdata = useQuery([\"logs\", { date: moment().format(\"YYYY-MM-DD\"), id: user.command.id }], getAllLogsByGq)\n  console.log(logdata);\n\n  useEffect(() => {\n    if (logdata.data && logdata.data.logs != null) {\n      setlogs(logdata.data.logs)\n    } else {\n      setlogs([])\n    }\n  }, [logdata.data]);\n  return (\n    <Container className=\"mt--7 row-transition\" fluid>\n      <Row>\n        <Col>\n          <ReportsList />\n        </Col>\n      </Row>\n      <hr/>\n      <Row>\n        <Col>\n          <Card>\n            <CardHeader>\n              <h3>Проводимые мероприятия</h3>\n            </CardHeader>\n            <CardBody>\n              <MapBrowser data={logs} />\n            </CardBody>\n          </Card>\n        </Col>\n      </Row>\n      \n    </Container>\n  );\n};\n\nDashboard.propTypes = {};\nDashboard.defaultProps = {};\n"]},"metadata":{},"sourceType":"module"}